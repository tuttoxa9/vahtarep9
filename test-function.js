// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Netlify —Ñ—É–Ω–∫—Ü–∏–∏ submit-application
require('dotenv').config({ path: '.env.local' });

// –ò–º–∏—Ç–∏—Ä—É–µ–º Netlify environment
const event = {
  httpMethod: 'POST',
  headers: {
    'content-type': 'application/json'
  },
  body: JSON.stringify({
    vacancyId: 'Zax86E3K0xQeb4Zsigps',
    applicantName: 'Test User',
    applicantPhone: '+1234567890',
    applicantEmail: 'test@example.com',
    message: 'Test application message'
  })
};

const context = {};

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é
const { handler } = require('./netlify/functions/submit-application.js');

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é
async function testFunction() {
  console.log('üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ submit-application...');
  console.log('üìß Environment variables:');
  console.log('FIREBASE_PROJECT_ID:', process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID);
  console.log('TELEGRAM_BOT_TOKEN:', process.env.TELEGRAM_BOT_TOKEN ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  console.log('TELEGRAM_CHAT_ID:', process.env.TELEGRAM_CHAT_ID ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  
  try {
    const result = await handler(event, context);
    console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏:');
    console.log('Status Code:', result.statusCode);
    console.log('Body:', result.body);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏:', error);
  }
}

testFunction();