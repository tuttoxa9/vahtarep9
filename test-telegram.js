import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env.local
dotenv.config({ path: '.env.local' });

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

async function testTelegramAPI() {
  try {
    console.log('üì± –¢–µ—Å—Ç–∏—Ä—É–µ–º Telegram API...');
    console.log('Bot Token:', TELEGRAM_BOT_TOKEN ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    console.log('Chat ID:', TELEGRAM_CHAT_ID);
    
    if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
      console.error('‚ùå Telegram credentials –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
      return;
    }
    
    const testMessage = `üß™ *–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VahtaRep9*\n\n–î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}\n\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–∏–µ–º—É –∑–∞—è–≤–æ–∫!`;
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: testMessage,
        parse_mode: 'Markdown',
      }),
    });
    
    const result = await response.json();
    
    if (response.ok) {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram!');
      console.log('Message ID:', result.result.message_id);
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', result);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Telegram API:', error);
  }
}

testTelegramAPI();