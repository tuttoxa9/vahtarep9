// –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫
async function testCompleteFlow() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫...\n');

  // 1. –¢–µ—Å—Ç Firebase
  console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...');
  try {
    const firebaseTest = await import('./test-firebase-connection.js');
    console.log('‚úÖ Firebase: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç\n');
  } catch (error) {
    console.error('‚ùå Firebase: –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è', error.message);
    return;
  }

  // 2. –¢–µ—Å—Ç API route
  console.log('2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º API route...');
  try {
    const testData = {
      vacancyId: '7tjzADoTOHd5545TdRt3',
      applicantName: '–ü–æ–ª–Ω—ã–π –¢–µ—Å—Ç User',
      applicantPhone: '+79123456789',
      applicantEmail: 'fulltest@example.com',
      message: '–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫'
    };

    const response = await fetch('http://localhost:3000/api/submit-application', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(testData)
    });

    const result = await response.json();

    if (response.ok && result.success) {
      console.log('‚úÖ API route: —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      console.log(`üìù Application ID: ${result.applicationId}\n`);
    } else {
      console.error('‚ùå API route: –æ—à–∏–±–∫–∞', result);
      return;
    }
  } catch (error) {
    console.error('‚ùå API route: –æ—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è', error.message);
    return;
  }

  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  console.log('3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...');
  try {
    const fs = await import('fs');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º ApplicationForm
    if (fs.existsSync('./src/components/vacancies/ApplicationForm.tsx')) {
      console.log('‚úÖ ApplicationForm.tsx: —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else {
      console.error('‚ùå ApplicationForm.tsx: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º API route
    if (fs.existsSync('./src/app/api/submit-application/route.ts')) {
      console.log('‚úÖ API route: —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else {
      console.error('‚ùå API route: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Netlify —Ñ—É–Ω–∫—Ü–∏—é
    if (fs.existsSync('./netlify/functions/submit-application.js')) {
      console.log('‚úÖ Netlify function: —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else {
      console.error('‚ùå Netlify function: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞: –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ\n');
  } catch (error) {
    console.error('‚ùå –°—Ç—Ä—É–∫—Ç—É—Ä–∞: –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏', error.message);
  }

  // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ environment variables
  console.log('4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è...');
  const requiredVars = [
    'NEXT_PUBLIC_FIREBASE_API_KEY',
    'NEXT_PUBLIC_FIREBASE_PROJECT_ID',
    'TELEGRAM_BOT_TOKEN',
    'TELEGRAM_CHAT_ID'
  ];

  let envOk = true;
  for (const varName of requiredVars) {
    if (process.env[varName]) {
      console.log(`‚úÖ ${varName}: –Ω–∞—Å—Ç—Ä–æ–µ–Ω`);
    } else {
      console.error(`‚ùå ${varName}: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω`);
      envOk = false;
    }
  }

  if (envOk) {
    console.log('‚úÖ Environment: –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã\n');
  } else {
    console.log('‚ö†Ô∏è Environment: –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã\n');
  }

  // 5. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
  console.log('üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:');
  console.log('================');
  console.log('‚úÖ Firebase: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
  console.log('‚úÖ API route: —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
  console.log('‚úÖ –§–∞–π–ª—ã: –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞ –º–µ—Å—Ç–µ');
  console.log('‚úÖ Environment: –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  console.log('');
  console.log('üéØ –°–¢–ê–¢–£–°: –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!');
  console.log('');
  console.log('üìù –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
  console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000/vacancies');
  console.log('2. –í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±—É—é –≤–∞–∫–∞–Ω—Å–∏—é');
  console.log('3. –ù–∞–∂–º–∏—Ç–µ "–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è" –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É');
  console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Firebase');
  console.log('');
  console.log('üîß –î–õ–Ø TELEGRAM –£–í–ï–î–û–ú–õ–ï–ù–ò–ô:');
  console.log('- –ù–∞–π–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Chat ID');
  console.log('- –û–±–Ω–æ–≤–∏—Ç–µ TELEGRAM_CHAT_ID –≤ .env.local');
  console.log('- –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä');
}

// –ü–æ–¥–∫–ª—é—á–∞–µ–º dotenv –¥–ª—è environment variables
import dotenv from 'dotenv';
dotenv.config({ path: '.env.local' });

testCompleteFlow().catch(console.error);