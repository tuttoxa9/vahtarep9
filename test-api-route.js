async function testAPIRoute() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API route /api/submit-application...');
    
    const testData = {
      vacancyId: '7tjzADoTOHd5545TdRt3',
      applicantName: '–¢–µ—Å—Ç–æ–≤—ã–π API User',
      applicantPhone: '+79123456789',
      applicantEmail: 'test-api@example.com',
      message: '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —á–µ—Ä–µ–∑ API route'
    };
    
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ:', testData);
    
    const response = await fetch('http://localhost:3000/api/submit-application', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(testData)
    });
    
    const result = await response.json();
    
    console.log('üì• –û—Ç–≤–µ—Ç API:', {
      status: response.status,
      ok: response.ok,
      result: result
    });
    
    if (response.ok && result.success) {
      console.log('‚úÖ API route —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
      console.log('Application ID:', result.applicationId);
    } else {
      console.log('‚ùå API route –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API route:', error);
  }
}

testAPIRoute();