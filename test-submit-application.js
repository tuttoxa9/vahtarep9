const { handler } = require('./netlify/functions/submit-application.js');

// –°–∏–º—É–ª—è—Ü–∏—è —Å–æ–±—ã—Ç–∏—è Netlify Function
const testEvent = {
  httpMethod: 'POST',
  body: JSON.stringify({
    vacancyId: 'test-vacancy-123',
    applicantName: '–¢–µ—Å—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    applicantPhone: '+7999123456',
    applicantEmail: 'test@example.com',
    message: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏'
  }),
  headers: {
    'content-type': 'application/json'
  }
};

const testContext = {};

async function testFunction() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ submit-application...');
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:', JSON.parse(testEvent.body));
    
    const result = await handler(testEvent, testContext);
    
    console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏:');
    console.log('Status Code:', result.statusCode);
    console.log('Headers:', result.headers);
    console.log('Body:', JSON.parse(result.body));
    
    if (result.statusCode === 200) {
      console.log('üéâ –§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
    } else {
      console.log('‚ùå –§—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ –æ—à–∏–±–∫—É');
    }
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  }
}

testFunction();